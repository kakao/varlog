syntax = "proto3";

package varlog.varlogpb;

import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "github.daumkakao.com/varlog/varlog/proto/varlogpb";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

enum StorageNodeStatus {
    option (gogoproto.goproto_enum_prefix) = false;

    SN_STATUS_RUNNING = 0
        [(gogoproto.enumvalue_customname) = "StorageNodeStatusRunning"];
    SN_STATUS_DELETED = 1
        [(gogoproto.enumvalue_customname) = "StorageNodeStatusDeleted"];
}

enum LogStreamStatus {
    option (gogoproto.goproto_enum_prefix) = false;

    LS_STATUS_RUNNING = 0
        [(gogoproto.enumvalue_customname) = "LogStreamStatusRunning"];
    LS_STATUS_SEALING = 1
        [(gogoproto.enumvalue_customname) = "LogStreamStatusSealing"];
    LS_STATUS_SEALED = 2
        [(gogoproto.enumvalue_customname) = "LogStreamStatusSealed"];
    LS_STATUS_DELETED = 3
        [(gogoproto.enumvalue_customname) = "LogStreamStatusDeleted"];
    LS_STATUS_UNSEALING = 4
        [(gogoproto.enumvalue_customname) = "LogStreamStatusUnsealing"];
}

message StorageDescriptor {
    option (gogoproto.equal) = true;

    string path = 1;
    uint64 used = 2;
    uint64 total = 3;
}

message StorageNodeDescriptor {
    option (gogoproto.equal) = true;

    uint32 storage_node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.StorageNodeID",
        (gogoproto.customname) = "StorageNodeID"
    ];
    string address = 2;
    StorageNodeStatus status = 3;
    repeated StorageDescriptor storages = 4 [(gogoproto.nullable) = true];
}

message ReplicaDescriptor {
    option (gogoproto.equal) = true;

    uint32 storage_node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.StorageNodeID",
        (gogoproto.customname) = "StorageNodeID"
    ];
    string path = 2;
}

message LogStreamDescriptor {
    option (gogoproto.equal) = true;

    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
    LogStreamStatus status = 2;

    repeated ReplicaDescriptor replicas = 3 [(gogoproto.nullable) = true];
}

message MetadataDescriptor {
    option (gogoproto.equal) = true;

    uint64 applied_index = 1;
    repeated StorageNodeDescriptor storage_nodes = 2
        [(gogoproto.nullable) = true];
    repeated LogStreamDescriptor log_streams = 3 [(gogoproto.nullable) = true];
}

// StorageNodeMetadataDescriptor represents metadata of stroage node.
message StorageNodeMetadataDescriptor {
    // ClusterID is the identifier of the cluster that the storage node belongs
    // to.
    uint32 cluster_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.ClusterID",
        (gogoproto.customname) = "ClusterID"
    ];
    // StorageNode is detailed information about the storage node.
    StorageNodeDescriptor storage_node = 2;
    repeated LogStreamMetadataDescriptor log_streams = 3
        [(gogoproto.nullable) = false];
    google.protobuf.Timestamp created_time = 4
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated_time = 5
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message LogStreamMetadataDescriptor {
    uint32 storage_node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.StorageNodeID",
        (gogoproto.customname) = "StorageNodeID"
    ];
    uint32 log_stream_id = 2 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
    LogStreamStatus status = 3;
    uint32 high_watermark = 4 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.GLSN",
        (gogoproto.customname) = "HighWatermark"
    ];
    string path = 5;
    google.protobuf.Timestamp created_time = 6
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated_time = 7
        [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message LogStreamReplicaDescriptor {
    uint32 storage_node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.StorageNodeID",
        (gogoproto.customname) = "StorageNodeID"
    ];
    uint32 log_stream_id = 2 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
    string address = 3;
}
