syntax = "proto3";

package varlog;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "github.daumkakao.com/varlog/varlog/proto/varlog";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

enum LogStreamStatus {
        option (gogoproto.goproto_enum_prefix) = false;

        NONE = 0 [(gogoproto.enumvalue_customname) = "LogStreamStatusNone"];
        NORMAL = 1 [(gogoproto.enumvalue_customname) = "LogStreamStatusNormal"];
        FINALIZED = 2 [(gogoproto.enumvalue_customname) = "LogStreamStatusFinalized"];
}

message StorageDescriptor {
        string path = 1;
        uint64 used = 2;
        uint64 total = 3;
}

message StorageNodeDescriptor {
        int32 storage_node_id = 1
            [(gogoproto.casttype)="github.daumkakao.com/varlog/varlog/pkg/varlog/types.StorageNodeID",
             (gogoproto.customname) = "StorageNodeID"];
        string address = 2;
        repeated StorageDescriptor storages = 3[(gogoproto.nullable) = true];
}

message ReplicaDescriptor {
        int32 storage_node_id = 1
            [(gogoproto.casttype)="github.daumkakao.com/varlog/varlog/pkg/varlog/types.StorageNodeID",
             (gogoproto.customname) = "StorageNodeID"];
        string path = 2;
}

message LogStreamDescriptor {
        int32 log_stream_id = 1
            [(gogoproto.casttype)="github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
             (gogoproto.customname) = "LogStreamID"];
        LogStreamStatus status = 2;

        repeated ReplicaDescriptor replicas = 3[(gogoproto.nullable) = true];
}

message MetadataDescriptor {
        repeated StorageNodeDescriptor storage_nodes = 1 [(gogoproto.nullable) = true];
        repeated LogStreamDescriptor log_streams = 2 [(gogoproto.nullable) = true];
}
