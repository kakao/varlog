syntax = "proto3";

package varlog.mrpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

option go_package = "github.daumkakao.com/varlog/varlog/proto/mrpb";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message AddPeerRequest {
    uint32 cluster_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.ClusterID",
        (gogoproto.customname) = "ClusterID"
    ];

    uint64 node_id = 2 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID",
        (gogoproto.customname) = "NodeID"
    ];

    string url = 3;
}

message RemovePeerRequest {
    uint32 cluster_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.ClusterID",
        (gogoproto.customname) = "ClusterID"
    ];

    uint64 node_id = 2 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID",
        (gogoproto.customname) = "NodeID"
    ];
}

message GetClusterInfoRequest {
    uint32 cluster_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.ClusterID",
        (gogoproto.customname) = "ClusterID"
    ];
}

message ClusterInfo {
    message Member {
        string peer = 1;
        string endpoint = 2;
    }

    uint32 cluster_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.ClusterID",
        (gogoproto.customname) = "ClusterID"
    ];

    uint64 node_id = 2 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID",
        (gogoproto.customname) = "NodeID"
    ];

    uint64 leader = 3
        [(gogoproto.casttype) =
             "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID"];

    int32 replication_factor = 4;

    map<uint64, Member> members = 5
        [(gogoproto.castkey) =
             "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID"];
}

message GetClusterInfoResponse {
    ClusterInfo cluster_info = 1;
}

service Management {
    rpc AddPeer(AddPeerRequest) returns (google.protobuf.Empty) {}
    rpc RemovePeer(RemovePeerRequest) returns (google.protobuf.Empty) {}
    rpc GetClusterInfo(GetClusterInfoRequest) returns (GetClusterInfoResponse) {
    }
}
