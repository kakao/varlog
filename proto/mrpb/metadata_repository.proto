syntax = "proto3";

package varlog.mrpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "varlogpb/metadata.proto";
import "snpb/log_stream_reporter.proto";
import "mrpb/raft_metadata_repository.proto";

option go_package = "github.com/kakao/varlog/proto/mrpb";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;

message GetMetadataRequest {}

message GetMetadataResponse {
  varlogpb.MetadataDescriptor metadata = 1;
}

message StorageNodeRequest {
  varlogpb.StorageNodeDescriptor storage_node = 1 [(gogoproto.nullable) = true];
}

message LogStreamRequest {
  varlogpb.LogStreamDescriptor log_stream = 1 [(gogoproto.nullable) = true];
}

message SealRequest {
  int32 cluster_id = 1 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.ClusterID",
    (gogoproto.customname) = "ClusterID"
  ];
  int32 log_stream_id = 2 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.LogStreamID",
    (gogoproto.customname) = "LogStreamID"
  ];
}

message SealResponse {
  varlogpb.LogStreamStatus status = 1;
  uint64 last_committed_glsn = 2 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.GLSN",
    (gogoproto.customname) = "LastCommittedGLSN"
  ];
}

message UnsealRequest {
  int32 cluster_id = 1 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.ClusterID",
    (gogoproto.customname) = "ClusterID"
  ];
  int32 log_stream_id = 2 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.LogStreamID",
    (gogoproto.customname) = "LogStreamID"
  ];
}

message UnsealResponse {
  varlogpb.LogStreamStatus status = 1;
}

message TopicRequest {
  int32 topic_id = 1 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.TopicID",
    (gogoproto.customname) = "TopicID"
  ];
}

message GetCommitResultRequest {
  int32 topic_id = 1 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.TopicID",
    (gogoproto.customname) = "TopicID"
  ];
  int32 log_stream_id = 2 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.LogStreamID",
    (gogoproto.customname) = "LogStreamID"
  ];
}

message GetCommitResultResponse {
  snpb.LogStreamCommitResult commit_result = 1 [(gogoproto.nullable) = false];
}

message GetReportsRequest {
  int32 log_stream_id = 1 [
    (gogoproto.casttype) = "github.com/kakao/varlog/pkg/types.LogStreamID",
    (gogoproto.customname) = "LogStreamID"
  ];
}

message GetReportsResponse {
  LogStreamUncommitReports reports = 1 [(gogoproto.nullable) = false];
}

service MetadataRepositoryService {
  rpc RegisterStorageNode(StorageNodeRequest) returns (google.protobuf.Empty) {}
  rpc UnregisterStorageNode(StorageNodeRequest)
    returns (google.protobuf.Empty) {}
  rpc RegisterTopic(TopicRequest) returns (google.protobuf.Empty) {}
  rpc UnregisterTopic(TopicRequest) returns (google.protobuf.Empty) {}
  rpc RegisterLogStream(LogStreamRequest) returns (google.protobuf.Empty) {}
  rpc UnregisterLogStream(LogStreamRequest) returns (google.protobuf.Empty) {}
  rpc UpdateLogStream(LogStreamRequest) returns (google.protobuf.Empty) {}
  rpc GetMetadata(GetMetadataRequest) returns (GetMetadataResponse) {}
  rpc Seal(SealRequest) returns (SealResponse) {}
  rpc Unseal(UnsealRequest) returns (UnsealResponse) {}
  rpc GetCommitResult(GetCommitResultRequest) returns (GetCommitResultResponse) {}
  rpc GetReports(GetReportsRequest) returns (GetReportsResponse) {}
}
