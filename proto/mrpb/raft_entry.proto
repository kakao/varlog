syntax = "proto3";

package varlog.mrpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "varlogpb/metadata.proto";
import "snpb/log_stream_reporter.proto";

option go_package = "github.daumkakao.com/varlog/varlog/proto/mrpb";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message RegisterStorageNode {
    varlogpb.StorageNodeDescriptor storage_node = 1
        [(gogoproto.nullable) = true];
}

message UnregisterStorageNode {
    uint32 storage_node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.StorageNodeID",
        (gogoproto.customname) = "StorageNodeID"
    ];
}

message RegisterLogStream {
    varlogpb.LogStreamDescriptor log_stream = 1 [(gogoproto.nullable) = true];
}

message UnregisterLogStream {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
}

message UpdateLogStream {
    varlogpb.LogStreamDescriptor log_stream = 1 [(gogoproto.nullable) = true];
}

message Report {
    snpb.LocalLogStreamDescriptor log_stream = 1 [(gogoproto.nullable) = true];
}

message Commit {}

message Seal {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
}

message Unseal {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
}

message AddPeer {
    uint64 node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID",
        (gogoproto.customname) = "NodeID"
    ];
    string url = 2;
}

message RemovePeer {
    uint64 node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID",
        (gogoproto.customname) = "NodeID"
    ];
}

message Endpoint {
    uint64 node_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.NodeID",
        (gogoproto.customname) = "NodeID"
    ];
    string url = 2;
}

message RaftEntry {
    message Request {
        option (gogoproto.onlyone) = true;

        RegisterStorageNode register_storage_node = 1;
        UnregisterStorageNode unregister_storage_node = 2;
        RegisterLogStream register_log_stream = 3;
        UnregisterLogStream unregister_log_stream = 4;
        UpdateLogStream update_log_stream = 5;
        Report report = 6;
        Commit commit = 7;
        Seal seal = 8;
        Unseal unseal = 9;
        AddPeer add_peer = 10;
        RemovePeer remove_peer = 11;
        Endpoint endpoint = 12;
    }
    uint64 node_index = 1;
    uint64 request_index = 2;
    uint64 applied_index = 3;
    Request request = 4 [(gogoproto.nullable) = false];
}

