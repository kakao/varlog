syntax = "proto3";

package varlog.mrpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "mrpb/raft_entry.proto";
import "mrpb/raft_metadata_repository.proto";

option go_package = "github.daumkakao.com/varlog/varlog/proto/mrpb";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;

message StateMachineLogCommitResult {
  uint64 trim_version = 1
      [(gogoproto.casttype) =
           "github.daumkakao.com/varlog/varlog/pkg/types.Version"];
  LogStreamCommitResults commit_result = 2;
}

message StateMachineLogEntry {
  message Payload {
    option (gogoproto.onlyone) = true;

    RegisterStorageNode register_storage_node = 1;
    UnregisterStorageNode unregister_storage_node = 2;
    RegisterLogStream register_log_stream = 3;
    UnregisterLogStream unregister_log_stream = 4;
    UpdateLogStream update_log_stream = 5;
    StateMachineLogCommitResult commit_result = 6;
  }
  uint64 applied_index = 1;
  Payload payload = 3 [(gogoproto.nullable) = false];
}

enum StateMechineLogRecordType {
  entry = 0;
  crc = 1;
}

message StateMachineLogRecord {
  StateMechineLogRecordType type = 1;
  uint32 crc = 2;
  bytes data = 3;
}
