syntax = "proto3";

package varlog.vmspb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "varlogpb/metadata.proto";
import "snpb/replicator.proto";

option go_package = "github.daumkakao.com/varlog/varlog/proto/vmspb";

option (gogoproto.protosizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message AddStorageNodeRequest {
    // address is IP of a node to be added to the cluster.
    string address = 1;
}

message AddStorageNodeResponse {
    varlogpb.StorageNodeMetadataDescriptor storage_node = 1;
}

message AddLogStreamRequest {
    // TODO: nullable = false
    repeated varlogpb.ReplicaDescriptor replicas = 1
        [(gogoproto.nullable) = true];
}

message AddLogStreamResponse {
    varlogpb.LogStreamDescriptor log_stream = 1;
}

message UnregisterLogStreamRequest {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
}

message UnregisterLogStreamResponse {}

message SealRequest {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
}

message SealResponse {
    repeated varlogpb.LogStreamMetadataDescriptor log_streams = 1
        [(gogoproto.nullable) = false];
}

message SyncRequest {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
    uint32 src_storage_node_id = 2 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.StorageNodeID",
        (gogoproto.customname) = "SrcStorageNodeID"
    ];
    uint32 dst_storage_node_id = 3 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.StorageNodeID",
        (gogoproto.customname) = "DstStorageNodeID"
    ];
}

message SyncResponse {
    snpb.SyncStatus status = 1;
}

message UnsealRequest {
    uint32 log_stream_id = 1 [
        (gogoproto.casttype) =
            "github.daumkakao.com/varlog/varlog/pkg/varlog/types.LogStreamID",
        (gogoproto.customname) = "LogStreamID"
    ];
}

message UnsealResponse {}

service ClusterManager {
    rpc AddStorageNode(AddStorageNodeRequest) returns (AddStorageNodeResponse) {
    }

    rpc AddLogStream(AddLogStreamRequest) returns (AddLogStreamResponse) {}

    rpc UnregisterLogStream(UnregisterLogStreamRequest)
        returns (UnregisterLogStreamResponse) {}

    rpc Seal(SealRequest) returns (SealResponse) {}

    rpc Sync(SyncRequest) returns (SyncResponse) {}

    rpc Unseal(UnsealRequest) returns (UnsealResponse) {}
}
