def masterCron = "H H(3-5),H(15-17) * * *" // for UTC

pipeline {

  agent any

  triggers {
    cron("${masterCron}")
  }

  stages {

    stage("build") {
      steps {
        sh "make all"
      }
    }

    stage("test.master") {
      environment { 
        TEST_USE_LOGGER = "0"
      }
      steps {
        sh "make test TEST_FAILFAST=1 TEST_TIMEOUT=3h TEST_CPU=2,4,8,16,32 TEST_COUNT=5 TEST_COVERAGE=0"
      }
      post {
        always {
          sh "make test_report"
          junit "build/reports/*.xml"
        }
        unsuccessful {
          script {
            notify("${env.BRANCH_NAME} failed: ${env.BUILD_URL}")
          }  
        }
      }
    }

    stage("test.e2e") {
      when {
        triggeredBy "TimerTrigger"
      }
      environment {
        VAULT_ADDR = "https://vault.daumkakao.io"
        VAULT_SECRET_PATH= "secret/varlog/dkosv3/dev"
        TEST_USE_LOGGER = 1
      }
      steps {
        withCredentials([
          string(credentialsId: "VAULT_ROLE_ID", variable: "VAULT_ROLE_ID"),
          string(credentialsId: "VAULT_SECRET_ID", variable: "VAULT_SECRET_ID")
        ]) {
          sh "go test -v -count 1 -failfast -tags e2e ./test/e2e"
        }
      }
    }
  }

}

def notify(msg) {
  def url = "http://api.noti.daumkakao.io/send/group/kakaotalk"
  def to = "9761"
  sh "curl -X POST ${url} -F to=${to} -F msg=\'${msg}\'"
}

