pipeline {
  agent any
  stages {
    stage("build") {
      steps {
        sh "make build"
      }
    } // end of stage("build")

    stage("test") {
      steps {
        sh "make test_ci TEST_FLAGS='-v -race -failfast -count=1 -timeout=20m'"
      }
      post {
        always {
          sh "make test_report"
          junit "reports/*.xml"

          sh "make coverage_report"
          cobertura coberturaReportFile: "reports/coverage.xml"
        }
      }
    } // end of stage("test")

    stage("test: python") {
      steps {
        sh "make test_py"
      }
    }

    stage("e2e") {
      when {
        // skip PR branch
        branch pattern: "(?i)^varlog-\\d+", comparator: "REGEXP"
      }
      environment {
        D2HUB = credentials("d2hub-account")
        E2E_ACCOUNT = credentials("varlog-ci-e2e-01-account")
        VAULT_ADDR = "https://vault.daumkakao.io"
        VAULT_SECRET_PATH= "secret/varlog/dkosv3/ci-e2e/01"
      }
      steps {
        timeout([time: 3, unit: "MINUTES"]) {
          waitUntil([initialRecurrencePeriod: 5000, quiet: true]) {
            echo "precondition: varlog/varlog-test image"
            script {
              def ret = sh([
                script: 'D2HUB_ID=${D2HUB_USR} D2HUB_PW=${D2HUB_PSW} build/e2e/d2hub-check-image.sh',
                returnStatus: true
              ])
              return (ret == 0)
            }
          }
        } // end of timeout

        withCredentials([string(credentialsId: 'varlog_vault_token', variable: 'VAULT_TOKEN')]) {
          lock("varlog-ci-e2e-01") {
            sh 'kubectl config set-credentials ${E2E_ACCOUNT_USR} --token=${E2E_ACCOUNT_PSW}'
            sh 'kubectl config set-cluster varlog-ci-e2e-01-cluster --insecure-skip-tls-verify=true --server https://dkosv3-varlog-ci-e2e-01-master-1.ay1.krane.9rum.cc:6443'
            sh 'kubectl config set-context varlog-ci-e2e-01-context --cluster=varlog-ci-e2e-01-cluster --user=${E2E_ACCOUNT_USR}'
            sh 'kubectl config use-context varlog-ci-e2e-01-context'
            sh 'make kustomize_e2e DOCKER_TAG=$(build/e2e/d2hub-image-tag.sh)'
            sh 'kubectl apply -k tests/ee/k8s/deploy/overlays/dkos/'
            sh 'make test_e2e TEST_FLAGS="-v -race -failfast -count=1 -timeout=30m"'
          } // end of lock
        } // end of withCredentials
      }
    } // end of stage("e2e")

  } // end of stages
} // end of pipeline
