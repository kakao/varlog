// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kakao/varlog/internal/admin/stats (interfaces: Repository)

// Package stats is a generated GoMock package.
package stats

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"

	types "github.com/kakao/varlog/pkg/types"
	admpb "github.com/kakao/varlog/proto/admpb"
	snpb "github.com/kakao/varlog/proto/snpb"
	varlogpb "github.com/kakao/varlog/proto/varlogpb"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetLogStream mocks base method.
func (m *MockRepository) GetLogStream(arg0 types.LogStreamID) *LogStreamStat {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogStream", arg0)
	ret0, _ := ret[0].(*LogStreamStat)
	return ret0
}

// GetLogStream indicates an expected call of GetLogStream.
func (mr *MockRepositoryMockRecorder) GetLogStream(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogStream", reflect.TypeOf((*MockRepository)(nil).GetLogStream), arg0)
}

// GetStorageNode mocks base method.
func (m *MockRepository) GetStorageNode(arg0 types.StorageNodeID) (*admpb.StorageNodeMetadata, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageNode", arg0)
	ret0, _ := ret[0].(*admpb.StorageNodeMetadata)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetStorageNode indicates an expected call of GetStorageNode.
func (mr *MockRepositoryMockRecorder) GetStorageNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageNode", reflect.TypeOf((*MockRepository)(nil).GetStorageNode), arg0)
}

// ListStorageNodes mocks base method.
func (m *MockRepository) ListStorageNodes() map[types.StorageNodeID]*admpb.StorageNodeMetadata {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListStorageNodes")
	ret0, _ := ret[0].(map[types.StorageNodeID]*admpb.StorageNodeMetadata)
	return ret0
}

// ListStorageNodes indicates an expected call of ListStorageNodes.
func (mr *MockRepositoryMockRecorder) ListStorageNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStorageNodes", reflect.TypeOf((*MockRepository)(nil).ListStorageNodes))
}

// RemoveStorageNode mocks base method.
func (m *MockRepository) RemoveStorageNode(arg0 types.StorageNodeID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveStorageNode", arg0)
}

// RemoveStorageNode indicates an expected call of RemoveStorageNode.
func (mr *MockRepositoryMockRecorder) RemoveStorageNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveStorageNode", reflect.TypeOf((*MockRepository)(nil).RemoveStorageNode), arg0)
}

// Report mocks base method.
func (m *MockRepository) Report(arg0 context.Context, arg1 *snpb.StorageNodeMetadataDescriptor, arg2 time.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Report", arg0, arg1, arg2)
}

// Report indicates an expected call of Report.
func (mr *MockRepositoryMockRecorder) Report(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Report", reflect.TypeOf((*MockRepository)(nil).Report), arg0, arg1, arg2)
}

// SetLogStreamStatus mocks base method.
func (m *MockRepository) SetLogStreamStatus(arg0 types.LogStreamID, arg1 varlogpb.LogStreamStatus) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetLogStreamStatus", arg0, arg1)
}

// SetLogStreamStatus indicates an expected call of SetLogStreamStatus.
func (mr *MockRepositoryMockRecorder) SetLogStreamStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLogStreamStatus", reflect.TypeOf((*MockRepository)(nil).SetLogStreamStatus), arg0, arg1)
}
