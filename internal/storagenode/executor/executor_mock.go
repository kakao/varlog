// Code generated by MockGen. DO NOT EDIT.
// Source: github.daumkakao.com/varlog/varlog/internal/storagenode/executor (interfaces: MeasurableExecutor)

// Package executor is a generated GoMock package.
package executor

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	telemetry "github.daumkakao.com/varlog/varlog/internal/storagenode/telemetry"
	types "github.daumkakao.com/varlog/varlog/pkg/types"
)

// MockMeasurableExecutor is a mock of MeasurableExecutor interface.
type MockMeasurableExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockMeasurableExecutorMockRecorder
}

// MockMeasurableExecutorMockRecorder is the mock recorder for MockMeasurableExecutor.
type MockMeasurableExecutorMockRecorder struct {
	mock *MockMeasurableExecutor
}

// NewMockMeasurableExecutor creates a new mock instance.
func NewMockMeasurableExecutor(ctrl *gomock.Controller) *MockMeasurableExecutor {
	mock := &MockMeasurableExecutor{ctrl: ctrl}
	mock.recorder = &MockMeasurableExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMeasurableExecutor) EXPECT() *MockMeasurableExecutorMockRecorder {
	return m.recorder
}

// LogStreamID mocks base method.
func (m *MockMeasurableExecutor) LogStreamID() types.LogStreamID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LogStreamID")
	ret0, _ := ret[0].(types.LogStreamID)
	return ret0
}

// LogStreamID indicates an expected call of LogStreamID.
func (mr *MockMeasurableExecutorMockRecorder) LogStreamID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogStreamID", reflect.TypeOf((*MockMeasurableExecutor)(nil).LogStreamID))
}

// StorageNodeID mocks base method.
func (m *MockMeasurableExecutor) StorageNodeID() types.StorageNodeID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StorageNodeID")
	ret0, _ := ret[0].(types.StorageNodeID)
	return ret0
}

// StorageNodeID indicates an expected call of StorageNodeID.
func (mr *MockMeasurableExecutorMockRecorder) StorageNodeID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorageNodeID", reflect.TypeOf((*MockMeasurableExecutor)(nil).StorageNodeID))
}

// Stub mocks base method.
func (m *MockMeasurableExecutor) Stub() *telemetry.TelemetryStub {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stub")
	ret0, _ := ret[0].(*telemetry.TelemetryStub)
	return ret0
}

// Stub indicates an expected call of Stub.
func (mr *MockMeasurableExecutorMockRecorder) Stub() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stub", reflect.TypeOf((*MockMeasurableExecutor)(nil).Stub))
}
