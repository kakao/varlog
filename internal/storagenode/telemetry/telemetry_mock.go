// Code generated by MockGen. DO NOT EDIT.
// Source: github.daumkakao.com/varlog/varlog/internal/storagenode/telemetry (interfaces: Measurable)

// Package telemetry is a generated GoMock package.
package telemetry

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMeasurable is a mock of Measurable interface.
type MockMeasurable struct {
	ctrl     *gomock.Controller
	recorder *MockMeasurableMockRecorder
}

// MockMeasurableMockRecorder is the mock recorder for MockMeasurable.
type MockMeasurableMockRecorder struct {
	mock *MockMeasurable
}

// NewMockMeasurable creates a new mock instance.
func NewMockMeasurable(ctrl *gomock.Controller) *MockMeasurable {
	mock := &MockMeasurable{ctrl: ctrl}
	mock.recorder = &MockMeasurableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMeasurable) EXPECT() *MockMeasurableMockRecorder {
	return m.recorder
}

// Stub mocks base method.
func (m *MockMeasurable) Stub() *Stub {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stub")
	ret0, _ := ret[0].(*Stub)
	return ret0
}

// Stub indicates an expected call of Stub.
func (mr *MockMeasurableMockRecorder) Stub() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stub", reflect.TypeOf((*MockMeasurable)(nil).Stub))
}
