// Code generated by MockGen. DO NOT EDIT.
// Source: github.daumkakao.com/varlog/varlog/internal/storagenode/id (interfaces: ClusterIDGetter,StorageNodeIDGetter)

// Package id is a generated GoMock package.
package id

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	types "github.daumkakao.com/varlog/varlog/pkg/types"
)

// MockClusterIDGetter is a mock of ClusterIDGetter interface.
type MockClusterIDGetter struct {
	ctrl     *gomock.Controller
	recorder *MockClusterIDGetterMockRecorder
}

// MockClusterIDGetterMockRecorder is the mock recorder for MockClusterIDGetter.
type MockClusterIDGetterMockRecorder struct {
	mock *MockClusterIDGetter
}

// NewMockClusterIDGetter creates a new mock instance.
func NewMockClusterIDGetter(ctrl *gomock.Controller) *MockClusterIDGetter {
	mock := &MockClusterIDGetter{ctrl: ctrl}
	mock.recorder = &MockClusterIDGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterIDGetter) EXPECT() *MockClusterIDGetterMockRecorder {
	return m.recorder
}

// ClusterID mocks base method.
func (m *MockClusterIDGetter) ClusterID() types.ClusterID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterID")
	ret0, _ := ret[0].(types.ClusterID)
	return ret0
}

// ClusterID indicates an expected call of ClusterID.
func (mr *MockClusterIDGetterMockRecorder) ClusterID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterID", reflect.TypeOf((*MockClusterIDGetter)(nil).ClusterID))
}

// MockStorageNodeIDGetter is a mock of StorageNodeIDGetter interface.
type MockStorageNodeIDGetter struct {
	ctrl     *gomock.Controller
	recorder *MockStorageNodeIDGetterMockRecorder
}

// MockStorageNodeIDGetterMockRecorder is the mock recorder for MockStorageNodeIDGetter.
type MockStorageNodeIDGetterMockRecorder struct {
	mock *MockStorageNodeIDGetter
}

// NewMockStorageNodeIDGetter creates a new mock instance.
func NewMockStorageNodeIDGetter(ctrl *gomock.Controller) *MockStorageNodeIDGetter {
	mock := &MockStorageNodeIDGetter{ctrl: ctrl}
	mock.recorder = &MockStorageNodeIDGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageNodeIDGetter) EXPECT() *MockStorageNodeIDGetterMockRecorder {
	return m.recorder
}

// StorageNodeID mocks base method.
func (m *MockStorageNodeIDGetter) StorageNodeID() types.StorageNodeID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StorageNodeID")
	ret0, _ := ret[0].(types.StorageNodeID)
	return ret0
}

// StorageNodeID indicates an expected call of StorageNodeID.
func (mr *MockStorageNodeIDGetterMockRecorder) StorageNodeID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorageNodeID", reflect.TypeOf((*MockStorageNodeIDGetter)(nil).StorageNodeID))
}
