// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/storage_node.go

// Package storage is a generated GoMock package.
package storage

import (
	gomock "github.com/golang/mock/gomock"
	types "github.daumkakao.com/varlog/varlog/pkg/varlog/types"
	reflect "reflect"
)

// MockManagement is a mock of Management interface
type MockManagement struct {
	ctrl     *gomock.Controller
	recorder *MockManagementMockRecorder
}

// MockManagementMockRecorder is the mock recorder for MockManagement
type MockManagementMockRecorder struct {
	mock *MockManagement
}

// NewMockManagement creates a new mock instance
func NewMockManagement(ctrl *gomock.Controller) *MockManagement {
	mock := &MockManagement{ctrl: ctrl}
	mock.recorder = &MockManagementMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManagement) EXPECT() *MockManagementMockRecorder {
	return m.recorder
}

// AddLogStream mocks base method
func (m *MockManagement) AddLogStream(clusterID types.ClusterID, storageNodeID types.StorageNodeID, logStreamID types.LogStreamID, path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddLogStream", clusterID, storageNodeID, logStreamID, path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddLogStream indicates an expected call of AddLogStream
func (mr *MockManagementMockRecorder) AddLogStream(clusterID, storageNodeID, logStreamID, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLogStream", reflect.TypeOf((*MockManagement)(nil).AddLogStream), clusterID, storageNodeID, logStreamID, path)
}

// RemoveLogStream mocks base method
func (m *MockManagement) RemoveLogStream(clusterID types.ClusterID, storageNodeID types.StorageNodeID, logStreamID types.LogStreamID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveLogStream", clusterID, storageNodeID, logStreamID)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveLogStream indicates an expected call of RemoveLogStream
func (mr *MockManagementMockRecorder) RemoveLogStream(clusterID, storageNodeID, logStreamID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveLogStream", reflect.TypeOf((*MockManagement)(nil).RemoveLogStream), clusterID, storageNodeID, logStreamID)
}
