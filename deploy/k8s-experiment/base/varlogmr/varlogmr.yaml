#---
#kind: Service
#apiVersion: v1
#metadata:
#  name: varlogmr-rpc-svc
#  namespace: default
#spec:
#  clusterIP: None
#  selector:
#    app: varlogmr
#  ports:
#    - name: rpc
#      port: 9092
---
kind: Service
apiVersion: v1
metadata:
  name: varlogmr-rpc
  namespace: default
  labels:
    app.kubernetes.io/name: varlog
    app.kubernetes.io/component: varlogmr
    app.kubernetes.io/part-of: varlog
spec:
  selector:
    app.kubernetes.io/name: varlog
    app.kubernetes.io/component: varlogmr
    app.kubernetes.io/part-of: varlog
  ports:
    - name: rpc
      port: 9092
---
kind: Service
apiVersion: v1
metadata:
  name: varlogmr-rpc-vip
  namespace: ingress-nginx
  annotations:
    service.beta.kubernetes.io/openstack-internal-load-balancer: "true"
spec:
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: ingress-nginx
  type: LoadBalancer
  ports:
    - name: varlogmr-rpc
      port: 9092
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: varlogmr
  namespace: default
  labels:
    app.kubernetes.io/name: varlog
    app.kubernetes.io/component: varlogmr
    app.kubernetes.io/part-of: varlog
spec:
  serviceName: varlogmr-rpc
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: varlog
      app.kubernetes.io/component: varlogmr
      app.kubernetes.io/part-of: varlog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: varlog
        app.kubernetes.io/component: varlogmr
        app.kubernetes.io/part-of: varlog
    spec:
      volumes:
        - name: varlogmr-data
          hostPath:
            path: /varlog/mr
            type: DirectoryOrCreate
      initContainers:
        - name: volume-perm
          image: mdock.daumkakao.io/busybox:stable
          command:
            - "sh"
            - "-c"
            - "chmod -R 777 /varlog/mr"
          volumeMounts:
            - name: varlogmr-data
              mountPath: /varlog/mr
      containers:
        - name: varlogmr
          image: idock.daumkakao.io/varlog/all-in-one:latest
          command:
            - "python3"
          args:
            - "/varlog/bin/start_varlogmr.py"
            - "--cluster-id=$(CLUSTER_ID)"
            - "--raft-address=http://$(HOST_IP):10000"
            - "--listen=$(HOST_IP):9092"
            - "--seed=$(VARLOGMR_RPC_SERVICE_HOST):$(VARLOGMR_RPC_SERVICE_PORT)"
            - "--admin=$(VARLOGADM_RPC_SERVICE_HOST):$(VARLOGADM_RPC_SERVICE_PORT)"
            - "--replication-factor=$(REPLICATION_FACTOR)"
            - "--raft-dir=/varlog/mr/raftdata"
            - "--log-dir=/varlog/mr/logs"
            - "--retry-interval-seconds=10"
          ports:
            - name: rpc
              containerPort: 9092
          env:
            - name: TZ
              value: Asia/Seoul
            - name: CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  key: cluster_id
                  name: varlog-conf
            - name: REPLICATION_FACTOR
              valueFrom:
                configMapKeyRef:
                  key: replication_factor
                  name: varlog-conf
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - name: varlogmr-data
              mountPath: /varlog/mr
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "/varlog/tools/grpc_health_probe -addr=${HOST_IP}:9092"
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "/varlog/tools/grpc_health_probe -addr=${HOST_IP}:9092"
            periodSeconds: 10
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        dkosv3.9rum.cc/node-group: varlogmr
